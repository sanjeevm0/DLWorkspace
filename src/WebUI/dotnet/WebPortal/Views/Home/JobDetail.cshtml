@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

<script>

    function getCommands() {
        $.ajax({ url: "/api/dlws/GetCommands?jobId=@ViewData["jobid"]", dataType: 'json', timeout: 10000, error: AlertAPIError }).done(
            function (json) {
                var commandsDiv = document.getElementById('commands-div');
                if (json.length == 0) {
                    commandsDiv.style.display = "none";
                }
                else {
                    commandsDiv.style.display = "block";   
                    var table = $('#command-table');
                    table.find("tr").remove();
                    for (var i = 0; i < json.length; i++) {
                        var tr
                        tr = $('<tr/>');
                        //Time
                        tr.append("<td>" + json[i].time + "</td>");
                        //Command
                        tr.append("<td>" + json[i].command + "</td>");
                        //Status
                        if (json[i].status === "run") {
                            var resultButton = '<a href="#" onclick="alert(\'' + json[i].output + '\')">Display Result</a>';
                            tr.append('<td><bold class="Admin">' + json[i].status + "</bold> | " + resultButton + '</td>');
                        }
                        else {
                            tr.append('<td><bold class="Alias">' + json[i].status + '</bold></td>');
                        }
                        
                        table.append(tr);
                    }
                }             
            });
    }

    function buildTemplateList() {
        $.ajax({ url: "/api/dlws/GetTemplates?type=command", dataType: 'json', timeout: 10000, error: AlertAPIError }).done(
            function (json) {
                $('#templateselect').find("option").remove();
                for (var i = 0; i < json.length; i++) {
                    var row = $("<option>" + json[i].Name + "</option>");
                    row.attr("value", JSON.stringify(json[i].Json));
                    $('#templateselect').append(row);
                }
            });
    }
    
    function DisplayDetail(payload) {
        if (payload.log) {
            //console.log(payload.jobId);
            if (payload.log != "fail-to-get-logs")
            {
                var objDiv = document.getElementById('logPanel');
                objDiv.style.height = "500px";
                objDiv.innerHTML = payload.log;
                objDiv.scrollTop = objDiv.scrollHeight;
            }
        }
        else {
            var logPanelDiv = document.getElementById('logPanel');
            logPanelDiv.innerHTML = "No log yet!";
            logPanelDiv.style.height = "50px";
        }
        if (payload.jobParams) {

            var jobDetailDiv = document.getElementById('jobDetail');

            var jobDetailStr = "Job Id: " + payload.jobParams.jobId + "\n";
            jobDetailStr += "Job Name: " + payload.jobParams.jobName + "\n";
            jobDetailStr += "Docker Image: " + payload.jobParams.image + "\n";
            jobDetailStr += "Command: " + payload.jobParams.cmd + "\n";
            jobDetailStr += "Data Path: " + payload.jobParams.dataPath + "\n";
            jobDetailStr += "Work Path: " + payload.jobParams.workPath + "\n";
            jobDetailStr += "Container Ports: " + payload.jobParams.interactivePort + "\n";
            jobDetailStr += "Job Path: " + payload.jobParams.jobPath + "\n";
            jobDetailStr += "Job Type: " + payload.jobParams.jobType + "\n";
            jobDetailStr += "GPU #: " + payload.jobParams.resourcegpu + "\n";
            jobDetailStr += "Job Status: " + payload.jobStatus + "\n";
            jobDetailStr += "Job Submission Time: " + payload.jobTime + "\n";
            jobDetailDiv.innerHTML = jobDetailStr;

            var jobfolderDiv = document.getElementById('jobfolderPanel');
            jobfolderDiv.innerHTML = "<a href='file:@ViewData["jobPath"]" + payload.jobParams.jobPath + "'> file:@ViewData["jobPath"]" + payload.jobParams.jobPath + "</a>";

            document.getElementById('run-command').style.display = payload.jobStatus == "running" ? "block" : "none";
            if (payload.jobStatus == "running") {
                getCommands();
            }
        }

        if (payload.endpoints)
        {
            $('#endpoints').show();

            var endpointsStr = "";
            for (var i = 0; i < payload.endpoints.length; i++)
            {

                if (payload.endpoints[i].containerPort == 22)
                {
                    endpointsStr += "To access the container via SSH, use command: ssh -i @ViewData["workPath"]" + ".ssh/id_rsa -p " + payload.endpoints[i].hostPort + " @ViewData["Username"]" + "@@" + payload.endpoints[i].hostName + "\n";
                }
                else
                {
                    var svcurl = "http://" + payload.endpoints[i].hostName + ":" + payload.endpoints[i].hostPort;
                    endpointsStr += "Container Port: " + payload.endpoints[i].containerPort + " is mapped to public ip: <a href='" + svcurl + "' target='_blank'> " + svcurl + "</a>  \n";
                }
            }
            var endpointsPanellDiv = document.getElementById('endpointsPanel');
            endpointsPanellDiv.innerHTML = endpointsStr;
            var height = payload.endpoints.length * 15;
            endpointsPanellDiv.style.height = height + "px";
        }
        else {
            $('#endpoints').hide();
        }
    }
    
    function GetDetail() {
        var url = "/api/dlws/JobDetail?jobId=@ViewData["jobid"]";
        $.ajax({ url: url, dataType: 'json', timeout: 10000 }).done(DisplayDetail);
    }
    
    function GetDetail() {
        var url = "/api/dlws/JobDetail?jobId=@ViewData["jobid"]";
        $.ajax({ url: url, dataType: 'json', timeout: 10000 }).done(DisplayDetail);
    }//

    function RefreshDetail() {
        if (document.getElementById('chkRefresh').checked) {
            GetDetail();
        }
    }

    $(document).ready(function() {
        GetDetail();
        buildTemplateList();
        setInterval(RefreshDetail, 5000);
    });
</script>

<script>
    function AlertCommandResult(payload) {       
        alert(payload.result);
        $("#run-cmd-btn").attr("disabled", false);
    }

    function AlertAPIError(xhr, ajaxOptions, thrownError) {
        alert("Restful API Error: \n" + JSON.stringify(thrownError));
        $("#run-cmd-btn").attr("disabled", false);
    }
    
    function RunCommand() {
        $("#run-cmd-btn").attr("disabled", true);
        var url = "/api/dlws/RunCommand?jobId=@ViewData["jobid"]&";
        url = url + "command=" + encodeURIComponent(document.getElementById("cmd-textbox").value);
        $.ajax({ url: url, dataType: 'json', timeout: 10000,  error: AlertAPIError }).done(AlertCommandResult);       
    }

    function UseTemplate(tempValue) {
        var temp = JSON.parse(tempValue);
        var cmdString = (temp.cmd) ? temp.cmd : "";
        document.getElementById("cmd-textbox").value = cmdString;
    }
    
</script>

<h2> Job Details:</h2>
<div id="jobDetail" style="height: 230px;" readonly="" class="ng-binding grey-box scroll-box">
</div>

<h2> Job Folder: </h2>
<div id="jobfolderPanel" style="height: 20px;" readonly="" class="ng-binding grey-box">    
</div>

<div id="endpoints" hidden>
    <h2> Mapped Endpoints: </h2>
    <h4>(Links to access interactive/visualization interface)</h4>
    <div id="endpointsPanel" style="height: 100px;" readonly="" class="ng-binding grey-box">
    </div>
</div>

<h2> Job Console Output:</h2>
<div id="logPanel" style="height: 500px;" readonly="" class="ng-binding grey-box scroll-box">
    No log yet
</div>

<div id="run-command" style="display: none">
    <h2> Run Command:</h2>
    <label>Use Template: </label>
    <select onchange="UseTemplate(this.value)" id="templateselect"></select>
    <div style="display: block; position: relative; width: 100%;">
        <textarea class="form-control cmd-textbox" style="height: 10em; display: block" id="cmd-textbox"></textarea>
        <button class="btn btn-success" style="position: absolute; bottom: 10px; right: 10px" onclick="RunCommand()" id="run-cmd-btn">Run</button>
    </div>

    <div id="commands-div" style="display:none">
        <br/>
        <h4>Commands</h4>
        <table class="table table-bordered table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th>Time</th>
                    <th style="width:60%">Command</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody  id="command-table" ></tbody>
        </table>
    </div>
</div>

<br />

<div>
    <input type="checkbox" id="chkRefresh" checked="checked" onclick="RefreshDetail()"/>
    <label>
        Auto-Refresh Job Details (Refresh-Rate 5 Seconds)
    </label>
</div>



<div>
    <h2> Job analytics and monitoring:</h2>
    <h3> GPU Usage:</h3>
    <iframe src="http://@Context.Request.Host:3000/dashboard/db/jobgpuusage?orgId=1&var-namespace=default&var-podname=@ViewData["jobid"]&var-core=All" width="100%" height="1000" frameborder="0"></iframe>
    
    <h3> System Resource Usage:</h3>
    <iframe src="http://@Context.Request.Host:3000/dashboard/db/kubernetes-pods?orgId=1&var-namespace=default&var-podname=@ViewData["jobid"]" width="100%" height="1000" frameborder="0"></iframe>
</div>

<style>
    .grey-box {
        background-color: #eee;
        white-space: pre;
        word-wrap: normal;
    }

    .scroll-box {
        overflow-x: scroll;
        overflow-y: scroll;
    }

    .grey-box, .cmd-textbox {
        font-family: 'Courier New';
        font-weight: 600;
        font-size: 12px;
    }

    .cmd-textbox {
        width: 100%;
        max-width: none;

    }
</style>
