[{"Name":"Caffe training example","Username":"jinl@microsoft.com","Json":"{\"jobName\" : \"caffe training example - resnet18\", \"resourcegpu\" : 1, \"workPath\" : \"samples\", \"image\" : \"bvlc/caffe:gpu\", \"cmd\" : \"caffe train -solver /work/caffe/solver_resnet18.prototxt\", \"interactivePort\" : \"\"}\r\n","Database":"CurrentCluster"},{"Name":"Caffe-IPython","Username":"hongzl@microsoft.com","Json":"{\"jobName\" : \"caffe-ipython\", \"image\" : \"bvlc/caffe:cpu\", \"cmd\" : \"apt-get update && apt-get install -y python-pip sudo && addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$ --disabled-password --gid $$gid$$ && pip install jupyter && cd /home/$$username$$ && sudo -H -u $$username$$ jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\", \"is_interactive\" : true, \"runningasroot\" : true}\r\n","Database":"CurrentCluster"},{"Name":"Caffe-iPython-SSH-GPU","Username":"jinl@microsoft.com","Json":"{\"jobName\":\"caffe-ssh-ipython\",\"resourcegpu\":\"1\",\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"bvlc/caffe:cpu\",\"cmd\":\"apt-get update && apt-get install -y openssh-server python-pip sudo && pip install jupyter && addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && cat /work/.ssh/id_rsa.pub >> /home/$$username$$/.ssh/authorized_keys && cp /work/.ssh/id_rsa* /home/$$username$$/.ssh/ ;  chown -R $$username$$ /home/$$username$$/ || /bin/true ) && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done && cd /home/$$username$$ && sudo -H -u $$username$$ jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888\",\"logDir\":\"\",\"runningasroot\":true}","Database":"CurrentCluster"},{"Name":"Caffe-SSH","Username":"jianfw@microsoft.com","Json":"{\"jobName\":\"caffe-ssh\",\"resourcegpu\":\"0\",\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"bvlc/caffe:cpu\",\"cmd\":\"apt-get update && apt-get install -y openssh-server sudo && addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$ --disabled-password --gid $$gid$$ && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && cat /work/.ssh/id_rsa.pub >> /home/$$username$$/.ssh/authorized_keys && chown -R $$username$$ /home/$$username$$/.ssh/  || /bin/true ) && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  sleep infinity\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22\",\"logDir\":\"\",\"runningasroot\":true}","Database":"CurrentCluster"},{"Name":"Command%20Template%20Example","Username":"t-tachug@microsoft.com","Json":"{\"jobName\":\"\",\"resourcegpu\":\"1\",\"workPath\":\"t-tachug\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"mlcloudreg.westus.cloudapp.azure.com:5000/philly/agi-tf-pytorch-0.12.1-src-ubuntu-16.04:latest\",\"cmd\":\"this is an exaple command template\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"8888\",\"logDir\":\"\",\"runningasroot\":false}","Database":"CurrentCluster"},{"Name":"Kaggle-Python","Username":"jinl@microsoft.com","Json":"{\"jobName\":\"kaggle-python\",\"resourcegpu\":\"1\",\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"kaggle/python\",\"cmd\":\"apt-get update && apt-get install -y openssh-server sudo && addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) root && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && chown -R $$username$$ /home/$$username$$/  || /bin/true ) && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  export HOME=/job && runuser -l $$username$$ -c \\\"jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\\\"\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888, 6006\",\"logDir\":\"\",\"runningasroot\":true}","Database":"CurrentCluster"},{"Name":"MXNET-Python-CPU","Username":"hongzl@microsoft.com","Json":"{\"jobName\" : \"mxnet-python-cpu\", \"image\" : \"tensorflow/tensorflow:latest-cpu\", \"cmd\" : \"export HOME=/job && jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\", \"is_interactive\" : true}\r\n","Database":"CurrentCluster"},{"Name":"MXNET-Python-GPU","Username":"hongzl@microsoft.com","Json":"{\"jobName\" : \"mxnet-python\", \"resourcegpu\" : 1, \"image\" : \"tensorflow/tensorflow:latest-gpu\", \"cmd\" : \"export HOME=/job && jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\", \"is_interactive\" : true}\r\n","Database":"CurrentCluster"},{"Name":"Spark-SSH","Username":"jinl@microsoft.com","Json":"{\"jobName\":\"spark-SSH\",\"resourcegpu\":\"1\",\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"mlcloudreg.westus.cloudapp.azure.com:5000/camdlw/spark\",\"cmd\":\"apt-get update && apt-get install -y openssh-server sudo &&  addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) root && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && chown -R $$username$$ /home/$$username$$/  || /bin/true ) && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  export HOME=/job && export LD_LIBRARY_PATH=/usr/local/nvidia/lib64/ ; /bin/sleep infinity\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22\",\"runningasroot\":\"1\",\"mountpoints\":[{\"containerPath\":\"/home/jinl\",\"hostPath\":\"/dlwsdata/work/jinl\",\"description\":\"NFS (remote file share)\",\"enabled\":true},{\"containerPath\":\"/scratch/jinl\",\"hostPath\":\"/dlwsdata/scratch/jinl\",\"description\":\"Kubernetes emptyDir (folder will be erased after job termination).\",\"enabled\":true},{\"containerPath\":\"/glusterfs/public\",\"hostPath\":\"/dlwsdata/glusterfs/public\",\"description\":\"GlusterFS (replicated distributed storage)\",\"enabled\":true},{\"containerPath\":\"/glusterfs/jinl\",\"hostPath\":\"/dlwsdata/glusterfs/jinl\",\"description\":\"GlusterFS (replicated distributed storage)\",\"enabled\":true},{\"containerPath\":\"/local/public\",\"hostPath\":\"/dlwsdata/local/public\",\"description\":\"Local HDD. \",\"enabled\":true}],\"env\":[],\"PSDistJob\":false,\"jobtrainingtype\":\"RegularJob\"}","Database":"CurrentCluster"},{"Name":"Tensorflow training example","Username":"jinl@microsoft.com","Json":"{\"jobName\" : \"Tensorflow training example - inception\", \"resourcegpu\" : 1, \"workPath\" : \"samples\", \"image\" : \"tensorflow/tensorflow:0.12.1-gpu\", \"cmd\" : \"/work/tensorflow/models/inception/bazel-bin/inception/imagenet_train --num_gpus=1 --batch_size=32 --train_dir=/job/model --data_dir=/data/tensor\", \"interactivePort\" : \"\"}\r\n","Database":"CurrentCluster"},{"Name":"Tensorflow-Devel-GPU-Tensorpack","Username":"jinl@microsoft.com","Json":"{\"jobName\":\"tensorflow-devel-ssh-tensorpack\",\"resourcegpu\":\"1\",\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"jinl/dlws-tutorial:tensorflow-1.4.0\",\"cmd\":\"apt-get update && apt-get install -y openssh-server sudo &&  addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) root && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && chown -R $$username$$ /home/$$username$$/  || /bin/true )  && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  sudo pip3 install -U --no-cache-dir git+https://github.com/ppwwyyxx/tensorpack.git; export HOME=/job && export LD_LIBRARY_PATH=/usr/local/nvidia/lib64/ ; runuser -l $$username$$ -c \\\"jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\\\"\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888, 6006\",\"logDir\":\"\",\"runningasroot\":true,\"mountpoints\":[{\"containerPath\":\"/home/jinl\",\"hostPath\":\"/dlwsdata/work/jinl\",\"description\":\"NFS (remote file share)\",\"enabled\":true},{\"containerPath\":\"/job\",\"hostPath\":\"/dlwsdatajobfiles\",\"description\":\"NFS (remote file share)\",\"enabled\":true},{\"containerPath\":\"/storage\",\"hostPath\":\"/dlwsdatastorage\",\"description\":\"NFS (remote file share)\",\"enabled\":true},{\"containerPath\":\"/work\",\"hostPath\":\"/dlwsdatawork\",\"description\":\"NFS (remote file share)\",\"enabled\":true},{\"containerPath\":\"/scratch/jinl\",\"hostPath\":\"/dlwsdata/scratch/jinl\",\"description\":\"Kubernetes emptyDir (folder will be erased after job termination).\",\"enabled\":true},{\"containerPath\":\"/glusterfs/public\",\"hostPath\":\"/dlwsdata/glusterfs/public\",\"description\":\"GlusterFS (replicated distributed storage)\",\"enabled\":true},{\"containerPath\":\"/glusterfs/jinl\",\"hostPath\":\"/dlwsdata/glusterfs/jinl\",\"description\":\"GlusterFS (replicated distributed storage)\",\"enabled\":true},{\"containerPath\":\"/local/public\",\"hostPath\":\"/dlwsdata/local/public\",\"description\":\"Local HDD. \",\"enabled\":true}],\"env\":[]}","Database":"CurrentCluster"},{"Name":"Tensorflow-Devel-GPU-Tensorpack1","Username":"jinl@microsoft.com","Json":"{\"jobName\":\"tensorflow-devel-ssh-tensorpack\",\"resourcegpu\":\"1\",\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"jinl/dlws-tutorial:tensorflow-1.4.0\",\"cmd\":\"apt-get update && apt-get install -y openssh-server sudo &&  addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) root && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && chown -R $$username$$ /home/$$username$$/ || /bin/true ) && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  sudo pip3 install -U --no-cache-dir git+https://github.com/ppwwyyxx/tensorpack.git; export HOME=/job && runuser -l $$username$$ -c \\\"jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\\\"\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888, 6006\",\"logDir\":\"\",\"runningasroot\":true}","Database":"CurrentCluster"},{"Name":"Tensorflow-IPython-CPU","Username":"jinl@microsoft.com","Json":"{\"jobName\" : \"tensorflow-ipython-cpu\", \"image\" : \"tensorflow/tensorflow:latest\", \"cmd\" : \"export HOME=/job && jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\", \"is_interactive\" : true}\r\n","Database":"CurrentCluster"},{"Name":"Tensorflow-IPython-GPU","Username":"jafrench@microsoft.com","Json":"{\"jobName\":\"tensorflow-ipython\",\"resourcegpu\":1,\"image\":\"tensorflow/tensorflow:latest-gpu\",\"cmd\":\"export HOME=/job && jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\",\"is_interactive\":false,\"mountpoints\":[{\"containerPath\":\"/home/jafrench\",\"hostPath\":\"/dlwsdata/work/jafrench\",\"description\":\"NFS (remote file share)\",\"enabled\":true,\"$$hashKey\":\"object:69\"},{\"containerPath\":\"/job\",\"hostPath\":\"/dlwsdatajobfiles\",\"description\":\"NFS (remote file share)\",\"enabled\":true,\"$$hashKey\":\"object:70\"},{\"containerPath\":\"/storage\",\"hostPath\":\"/dlwsdatastorage\",\"description\":\"NFS (remote file share)\",\"enabled\":true,\"$$hashKey\":\"object:71\"},{\"containerPath\":\"/work\",\"hostPath\":\"/dlwsdatawork\",\"description\":\"NFS (remote file share)\",\"enabled\":true,\"$$hashKey\":\"object:72\"},{\"containerPath\":\"/scratch/jafrench\",\"hostPath\":\"/dlwsdata/scratch/jafrench\",\"description\":\"Kubernetes emptyDir (folder will be erased after job termination).\",\"enabled\":true,\"$$hashKey\":\"object:73\"},{\"containerPath\":\"/glusterfs/public\",\"hostPath\":\"/dlwsdata/glusterfs/public\",\"description\":\"GlusterFS (replicated distributed storage)\",\"enabled\":true,\"$$hashKey\":\"object:74\"},{\"containerPath\":\"/glusterfs/jafrench\",\"hostPath\":\"/dlwsdata/glusterfs/jafrench\",\"description\":\"GlusterFS (replicated distributed storage)\",\"enabled\":true,\"$$hashKey\":\"object:75\"},{\"containerPath\":\"/local/public\",\"hostPath\":\"/dlwsdata/local/public\",\"description\":\"Local HDD. \",\"enabled\":true,\"$$hashKey\":\"object:76\"}],\"do_log\":false,\"runningasroot\":\"0\",\"env\":[],\"PSDistJob\":false,\"jobtrainingtype\":\"RegularJob\"}","Database":"CurrentCluster"},{"Name":"Tensorflow-iPython-SSH-GPU","Username":"jinl@microsoft.com","Json":"{\"jobName\":\"tensorflow-ssh\",\"resourcegpu\":\"1\",\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"tensorflow/tensorflow:latest-gpu\",\"cmd\":\"apt-get update && apt-get install -y openssh-server sudo && addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && cat /work/.ssh/id_rsa.pub >> /home/$$username$$/.ssh/authorized_keys && cp /work/.ssh/id_rsa* /home/$$username$$/.ssh/ ;  chown -R $$username$$ /home/$$username$$/ || /bin/true ) && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  export HOME=/job && runuser -l $$username$$ -c \\\"jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\\\"\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888\",\"logDir\":\"\",\"runningasroot\":true}","Database":"CurrentCluster"},{"Name":"Test Template","Username":"jinl@microsoft.com","Json":"{\"image\":\"ubuntu:16.04\"}","Database":"CurrentCluster"},{"Name":"Torch","Username":"pshuang@microsoft.com","Json":"{\"jobName\":\"tensorflow-ssh\",\"resourcegpu\":\"1\",\"workPath\":\"jinl\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"gcr-repos.redmond.corp.microsoft.com:5000/pshuang/custom-msrdl-torch-nccl-v3:latest\",\"cmd\":\"apt-get update && apt-get install -y openssh-server sudo && addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && cat /work/.ssh/id_rsa.pub >> /home/$$username$$/.ssh/authorized_keys && cp /work/.ssh/id_rsa* /home/$$username$$/.ssh/ &&  chown -R $$username$$ /home/$$username$$/ || /bin/true ) && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  export HOME=/job && runuser -l $$username$$ -c \\\"jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\\\"\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888\",\"logDir\":\"\",\"runningasroot\":true}","Database":"CurrentCluster"}]